{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","handleStatusChange","handleQueryChange","resetQuery","query","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","closeModal","useState","user","setUser","useEffect","userId","catch","href","email","name","App","setTodos","setQuery","status","setStatus","isLoading","setIsLoading","setSelectedTodo","todoFromServer","finally","visibleTodos","statusFilter","queryFilter","filteredTodos","filter","queryLower","trim","toLowerCase","includes","getFilterTodos","currentStatus","currentQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bff2f9d0.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={classNames(\n            { 'has-background-info-light': selectedTodo?.id === todo.id },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far',\n                  { 'fa-eye': selectedTodo?.id !== todo.id },\n                  { 'fa-eye-slash': selectedTodo?.id === todo.id })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  handleStatusChange: (status: string) => void,\n  handleQueryChange: (query: string) => void,\n  resetQuery: () => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleStatusChange,\n  handleQueryChange,\n  resetQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => {\n              handleStatusChange(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            handleQueryChange(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser)\n      .catch(() => setUser(null));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst getFilterTodos = (\n  todos: Todo[],\n  statusFilter: string,\n  queryFilter: string,\n): Todo[] => {\n  let filteredTodos: Todo[] = [];\n\n  switch (statusFilter) {\n    case 'all': {\n      filteredTodos = todos;\n      break;\n    }\n\n    case 'active': {\n      filteredTodos = todos.filter(todo => todo.completed === false);\n\n      break;\n    }\n\n    case 'completed': {\n      filteredTodos = todos.filter(todo => todo.completed === true);\n\n      break;\n    }\n\n    default: filteredTodos = todos;\n  }\n\n  if (!queryFilter) {\n    return filteredTodos;\n  }\n\n  const queryLower = queryFilter.trim().toLowerCase();\n  const preparedTodos = filteredTodos.filter(({ title }) => {\n    const titleLower = title.toLowerCase();\n\n    return titleLower.includes(queryLower);\n  });\n\n  return preparedTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todoFromServer => {\n        setTodos(todoFromServer);\n      })\n      .catch(() => setIsLoading(false))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = getFilterTodos(todos, status, query);\n\n  const handleStatusChange = (currentStatus: string) => {\n    setStatus(currentStatus);\n  };\n\n  const handleQueryChange = (currentQuery: string) => {\n    setQuery(currentQuery);\n  };\n\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  const onSelectedTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const closeModal = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter\n                handleStatusChange={handleStatusChange}\n                handleQueryChange={handleQueryChange}\n                resetQuery={resetQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectedTodo={onSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} closeModal={closeModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}